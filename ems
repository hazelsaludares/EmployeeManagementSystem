using System;
using System.Collections.Generic;

// Enum representing different departments
public enum Department
{
    IT,
    HR,
    Finance
}

// Base class Person with properties FirstName and LastName
public class Person
{
    public string FirstName { get; set; }
    public string LastName { get; set; }
}

// Employee class derived from Person class
public class Employee : Person
{
    // Static member to keep track of total number of employees
    public static int TotalEmployees { get; private set; }

    // Properties of Employee class
    public int EmployeeId { get; }
    public double Salary { get; set; }
    public Department Department { get; set; }

    // Constructor to initialize properties
    public Employee(int employeeId, string firstName, string lastName, double salary, Department department)
    {
        EmployeeId = employeeId;
        FirstName = firstName;
        LastName = lastName;
        Salary = salary;
        Department = department;
        TotalEmployees++;
    }

    // Destructor to display message when object is destroyed
    ~Employee()
    {
        Console.WriteLine($"Employee {FirstName} {LastName} with ID {EmployeeId} is destroyed.");
    }
}

// Interface IManager with method AssignEmployeeToDepartment
public interface IManager
{
    void AssignEmployeeToDepartment(Employee employee, Department department);
}

// EmployeeManager class managing list of employees
public class EmployeeManager : IManager
{
    private List<Employee> employees;

    // Constructor
    public EmployeeManager()
    {
        employees = new List<Employee>();
    }

    // Method to add an employee to the list
    public void AddEmployee(Employee employee)
    {
        employees.Add(employee);
    }

    // Method to remove an employee based on employee ID
    public void RemoveEmployee(int employeeId)
    {
        Employee employeeToRemove = employees.Find(emp => emp.EmployeeId == employeeId);
        if (employeeToRemove != null)
        {
            employees.Remove(employeeToRemove);
            Console.WriteLine($"Employee with ID {employeeId} removed successfully.");
        }
        else
        {
            Console.WriteLine($"Employee with ID {employeeId} not found.");
        }
    }

    // Method to display details of all employees
    public void DisplayEmployees()
    {
        foreach (var employee in employees)
        {
            Console.WriteLine($"Employee ID: {employee.EmployeeId}, Name: {employee.FirstName} {employee.LastName}, Salary: {employee.Salary}, Department: {employee.Department}");
        }
    }

    // Method to calculate and display total salary of all employees
    public void DisplayTotalSalary()
    {
        double totalSalary = 0;
        foreach (var employee in employees)
        {
            totalSalary += employee.Salary;
        }
        Console.WriteLine($"Total Salary of all employees: {totalSalary}");
    }

    // Method to assign an employee to a department (implementation of IManager interface)
    public void AssignEmployeeToDepartment(Employee employee, Department department)
    {
        employee.Department = department;
        Console.WriteLine($"Employee {employee.FirstName} {employee.LastName} assigned to {department} department.");
    }
}

class Program
{
    static void Main(string[] args)
    {
        // Create instances of EmployeeManager and Employee
        EmployeeManager employeeManager = new EmployeeManager();

        Employee emp1 = new Employee(1, "John", "Doe", 50000, Department.IT);
        Employee emp2 = new Employee(2, "Jane", "Smith", 60000, Department.HR);
        Employee emp3 = new Employee(3, "David", "Johnson", 70000, Department.Finance);

        // Adding employees to the list
        employeeManager.AddEmployee(emp1);
        employeeManager.AddEmployee(emp2);
        employeeManager.AddEmployee(emp3);

        // Displaying employees
        Console.WriteLine("Details of all employees:");
        employeeManager.DisplayEmployees();

        // Removing an employee
        employeeManager.RemoveEmployee(2);
        Console.WriteLine("Details of employees after removal:");
        employeeManager.DisplayEmployees();

        // Displaying total salary
        employeeManager.DisplayTotalSalary();

        // Assigning employee to a department
        employeeManager.AssignEmployeeToDepartment(emp1, Department.IT);
    }
}
